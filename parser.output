Terminals unused in grammar

    GE
    GT
    LE
    LT
    NE
    LB
    RB
    STRUCT
    SWITCH
    CASE
    COLON
    DEFAULT
    EXT_DEF_LIST
    EXT_VAR_DEF
    FUNC_DEF
    FUNC_DEC
    EXT_DEC_LIST
    PARAM_LIST
    PARAM_DEC
    VAR_DEF
    DEC_LIST
    DEF_LIST
    COMP_STM
    STM_LIST
    EXP_STMT
    IF_THEN
    IF_THEN_ELSE
    FUNC_CALL
    ARGS
    FUNCTION
    PARAM
    ARG
    CALL
    LABEL
    GOTO
    JLT
    JLE
    JGT
    JGE
    EQ
    NEQ


Grammar

    0 $accept: program $end

    1 program: ExtDefList

    2 ExtDefList: %empty
    3           | ExtDef ExtDefList

    4 ExtDef: Specifier ExtDecList SEMI
    5       | Specifier FuncDec CompSt
    6       | error SEMI

    7 Specifier: TYPE

    8 ExtDecList: VarDec
    9           | VarDec COMMA ExtDecList

   10 VarDec: ID

   11 FuncDec: ID LP VarList RP
   12        | ID LP RP

   13 VarList: ParamDec
   14        | ParamDec COMMA VarList

   15 ParamDec: Specifier VarDec

   16 CompSt: LC DefList StmList RC

   17 StmList: %empty
   18        | Stm StmList

   19 Stm: Exp SEMI
   20    | CompSt
   21    | RETURN Exp SEMI
   22    | IF LP Exp RP Stm
   23    | IF LP Exp RP Stm ELSE Stm
   24    | WHILE LP Exp RP Stm
   25    | FOR LP Exp SEMI Exp SEMI Exp RP Stm

   26 DefList: %empty
   27        | Def DefList
   28        | error SEMI

   29 Def: Specifier DecList SEMI

   30 DecList: Dec
   31        | Dec COMMA DecList

   32 Dec: VarDec
   33    | VarDec ASSIGNOP Exp

   34 Exp: Exp ASSIGNOP Exp
   35    | Exp AND Exp
   36    | Exp OR Exp
   37    | Exp RELOP Exp
   38    | Exp PLUS Exp
   39    | Exp MINUS Exp
   40    | Exp STAR Exp
   41    | Exp DIV Exp
   42    | LP Exp RP
   43    | MINUS Exp
   44    | NOT Exp
   45    | DPLUS Exp
   46    | ID LP Args RP
   47    | ID LP RP
   48    | ID
   49    | INT
   50    | FLOAT

   51 Args: Exp COMMA Args
   52     | Exp


Terminals, with rules where they appear

    $end (0) 0
    error (256) 6 28
    INT <type_int> (258) 49
    ID <type_id> (259) 10 11 12 46 47 48
    RELOP <type_id> (260) 37
    TYPE <type_id> (261) 7
    FLOAT <type_float> (262) 50
    DPLUS (263) 45
    GE (264)
    GT (265)
    LE (266)
    LP (267) 11 12 22 23 24 25 42 46 47
    LT (268)
    NE (269)
    RP (270) 11 12 22 23 24 25 42 46 47
    LB (271)
    RB (272)
    LC (273) 16
    RC (274) 16
    SEMI (275) 4 6 19 21 25 28 29
    COMMA (276) 9 14 31 51
    PLUS (277) 38
    MINUS (278) 39 43
    STAR (279) 40
    DIV (280) 41
    ASSIGNOP (281) 33 34
    AND (282) 35
    OR (283) 36
    NOT (284) 44
    IF (285) 22 23
    ELSE (286) 23
    WHILE (287) 24
    RETURN (288) 21
    STRUCT (289)
    FOR (290) 25
    SWITCH (291)
    CASE (292)
    COLON (293)
    DEFAULT (294)
    EXT_DEF_LIST (295)
    EXT_VAR_DEF (296)
    FUNC_DEF (297)
    FUNC_DEC (298)
    EXT_DEC_LIST (299)
    PARAM_LIST (300)
    PARAM_DEC (301)
    VAR_DEF (302)
    DEC_LIST (303)
    DEF_LIST (304)
    COMP_STM (305)
    STM_LIST (306)
    EXP_STMT (307)
    IF_THEN (308)
    IF_THEN_ELSE (309)
    FUNC_CALL (310)
    ARGS (311)
    FUNCTION (312)
    PARAM (313)
    ARG (314)
    CALL (315)
    LABEL (316)
    GOTO (317)
    JLT (318)
    JLE (319)
    JGT (320)
    JGE (321)
    EQ (322)
    NEQ (323)
    UMINUS (324)
    LOWER_THEN_ELSE (325)


Nonterminals, with rules where they appear

    $accept (71)
        on left: 0
    program <ptr> (72)
        on left: 1
        on right: 0
    ExtDefList <ptr> (73)
        on left: 2 3
        on right: 1 3
    ExtDef <ptr> (74)
        on left: 4 5 6
        on right: 3
    Specifier <ptr> (75)
        on left: 7
        on right: 4 5 15 29
    ExtDecList <ptr> (76)
        on left: 8 9
        on right: 4 9
    VarDec <ptr> (77)
        on left: 10
        on right: 8 9 15 32 33
    FuncDec <ptr> (78)
        on left: 11 12
        on right: 5
    VarList <ptr> (79)
        on left: 13 14
        on right: 11 14
    ParamDec <ptr> (80)
        on left: 15
        on right: 13 14
    CompSt <ptr> (81)
        on left: 16
        on right: 5 20
    StmList <ptr> (82)
        on left: 17 18
        on right: 16 18
    Stm <ptr> (83)
        on left: 19 20 21 22 23 24 25
        on right: 18 22 23 24 25
    DefList <ptr> (84)
        on left: 26 27 28
        on right: 16 27
    Def <ptr> (85)
        on left: 29
        on right: 27
    DecList <ptr> (86)
        on left: 30 31
        on right: 29 31
    Dec <ptr> (87)
        on left: 32 33
        on right: 30 31
    Exp <ptr> (88)
        on left: 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50
        on right: 19 21 22 23 24 25 33 34 35 36 37 38 39 40 41 42 43 44 45 51 52
    Args <ptr> (89)
        on left: 51 52
        on right: 46 51


State 0

    0 $accept: . program $end

    error  shift, and go to state 1
    TYPE   shift, and go to state 2

    $end  reduce using rule 2 (ExtDefList)

    program     go to state 3
    ExtDefList  go to state 4
    ExtDef      go to state 5
    Specifier   go to state 6


State 1

    6 ExtDef: error . SEMI

    SEMI  shift, and go to state 7


State 2

    7 Specifier: TYPE .

    $default  reduce using rule 7 (Specifier)


State 3

    0 $accept: program . $end

    $end  shift, and go to state 8


State 4

    1 program: ExtDefList .

    $default  reduce using rule 1 (program)


State 5

    3 ExtDefList: ExtDef . ExtDefList

    error  shift, and go to state 1
    TYPE   shift, and go to state 2

    $end  reduce using rule 2 (ExtDefList)

    ExtDefList  go to state 9
    ExtDef      go to state 5
    Specifier   go to state 6


State 6

    4 ExtDef: Specifier . ExtDecList SEMI
    5       | Specifier . FuncDec CompSt

    ID  shift, and go to state 10

    ExtDecList  go to state 11
    VarDec      go to state 12
    FuncDec     go to state 13


State 7

    6 ExtDef: error SEMI .

    $default  reduce using rule 6 (ExtDef)


State 8

    0 $accept: program $end .

    $default  accept


State 9

    3 ExtDefList: ExtDef ExtDefList .

    $default  reduce using rule 3 (ExtDefList)


State 10

   10 VarDec: ID .
   11 FuncDec: ID . LP VarList RP
   12        | ID . LP RP

    LP  shift, and go to state 14

    $default  reduce using rule 10 (VarDec)


State 11

    4 ExtDef: Specifier ExtDecList . SEMI

    SEMI  shift, and go to state 15


State 12

    8 ExtDecList: VarDec .
    9           | VarDec . COMMA ExtDecList

    COMMA  shift, and go to state 16

    $default  reduce using rule 8 (ExtDecList)


State 13

    5 ExtDef: Specifier FuncDec . CompSt

    LC  shift, and go to state 17

    CompSt  go to state 18


State 14

   11 FuncDec: ID LP . VarList RP
   12        | ID LP . RP

    TYPE  shift, and go to state 2
    RP    shift, and go to state 19

    Specifier  go to state 20
    VarList    go to state 21
    ParamDec   go to state 22


State 15

    4 ExtDef: Specifier ExtDecList SEMI .

    $default  reduce using rule 4 (ExtDef)


State 16

    9 ExtDecList: VarDec COMMA . ExtDecList

    ID  shift, and go to state 23

    ExtDecList  go to state 24
    VarDec      go to state 12


State 17

   16 CompSt: LC . DefList StmList RC

    error  shift, and go to state 25
    TYPE   shift, and go to state 2

    INT     reduce using rule 26 (DefList)
    ID      reduce using rule 26 (DefList)
    FLOAT   reduce using rule 26 (DefList)
    DPLUS   reduce using rule 26 (DefList)
    LP      reduce using rule 26 (DefList)
    LC      reduce using rule 26 (DefList)
    RC      reduce using rule 26 (DefList)
    MINUS   reduce using rule 26 (DefList)
    NOT     reduce using rule 26 (DefList)
    IF      reduce using rule 26 (DefList)
    WHILE   reduce using rule 26 (DefList)
    RETURN  reduce using rule 26 (DefList)
    FOR     reduce using rule 26 (DefList)

    Specifier  go to state 26
    DefList    go to state 27
    Def        go to state 28


State 18

    5 ExtDef: Specifier FuncDec CompSt .

    $default  reduce using rule 5 (ExtDef)


State 19

   12 FuncDec: ID LP RP .

    $default  reduce using rule 12 (FuncDec)


State 20

   15 ParamDec: Specifier . VarDec

    ID  shift, and go to state 23

    VarDec  go to state 29


State 21

   11 FuncDec: ID LP VarList . RP

    RP  shift, and go to state 30


State 22

   13 VarList: ParamDec .
   14        | ParamDec . COMMA VarList

    COMMA  shift, and go to state 31

    $default  reduce using rule 13 (VarList)


State 23

   10 VarDec: ID .

    $default  reduce using rule 10 (VarDec)


State 24

    9 ExtDecList: VarDec COMMA ExtDecList .

    $default  reduce using rule 9 (ExtDecList)


State 25

   28 DefList: error . SEMI

    SEMI  shift, and go to state 32


State 26

   29 Def: Specifier . DecList SEMI

    ID  shift, and go to state 23

    VarDec   go to state 33
    DecList  go to state 34
    Dec      go to state 35


State 27

   16 CompSt: LC DefList . StmList RC

    INT     shift, and go to state 36
    ID      shift, and go to state 37
    FLOAT   shift, and go to state 38
    DPLUS   shift, and go to state 39
    LP      shift, and go to state 40
    LC      shift, and go to state 17
    MINUS   shift, and go to state 41
    NOT     shift, and go to state 42
    IF      shift, and go to state 43
    WHILE   shift, and go to state 44
    RETURN  shift, and go to state 45
    FOR     shift, and go to state 46

    $default  reduce using rule 17 (StmList)

    CompSt   go to state 47
    StmList  go to state 48
    Stm      go to state 49
    Exp      go to state 50


State 28

   27 DefList: Def . DefList

    error  shift, and go to state 25
    TYPE   shift, and go to state 2

    INT     reduce using rule 26 (DefList)
    ID      reduce using rule 26 (DefList)
    FLOAT   reduce using rule 26 (DefList)
    DPLUS   reduce using rule 26 (DefList)
    LP      reduce using rule 26 (DefList)
    LC      reduce using rule 26 (DefList)
    RC      reduce using rule 26 (DefList)
    MINUS   reduce using rule 26 (DefList)
    NOT     reduce using rule 26 (DefList)
    IF      reduce using rule 26 (DefList)
    WHILE   reduce using rule 26 (DefList)
    RETURN  reduce using rule 26 (DefList)
    FOR     reduce using rule 26 (DefList)

    Specifier  go to state 26
    DefList    go to state 51
    Def        go to state 28


State 29

   15 ParamDec: Specifier VarDec .

    $default  reduce using rule 15 (ParamDec)


State 30

   11 FuncDec: ID LP VarList RP .

    $default  reduce using rule 11 (FuncDec)


State 31

   14 VarList: ParamDec COMMA . VarList

    TYPE  shift, and go to state 2

    Specifier  go to state 20
    VarList    go to state 52
    ParamDec   go to state 22


State 32

   28 DefList: error SEMI .

    $default  reduce using rule 28 (DefList)


State 33

   32 Dec: VarDec .
   33    | VarDec . ASSIGNOP Exp

    ASSIGNOP  shift, and go to state 53

    $default  reduce using rule 32 (Dec)


State 34

   29 Def: Specifier DecList . SEMI

    SEMI  shift, and go to state 54


State 35

   30 DecList: Dec .
   31        | Dec . COMMA DecList

    COMMA  shift, and go to state 55

    $default  reduce using rule 30 (DecList)


State 36

   49 Exp: INT .

    $default  reduce using rule 49 (Exp)


State 37

   46 Exp: ID . LP Args RP
   47    | ID . LP RP
   48    | ID .

    LP  shift, and go to state 56

    $default  reduce using rule 48 (Exp)


State 38

   50 Exp: FLOAT .

    $default  reduce using rule 50 (Exp)


State 39

   45 Exp: DPLUS . Exp

    INT    shift, and go to state 36
    ID     shift, and go to state 37
    FLOAT  shift, and go to state 38
    DPLUS  shift, and go to state 39
    LP     shift, and go to state 40
    MINUS  shift, and go to state 41
    NOT    shift, and go to state 42

    Exp  go to state 57


State 40

   42 Exp: LP . Exp RP

    INT    shift, and go to state 36
    ID     shift, and go to state 37
    FLOAT  shift, and go to state 38
    DPLUS  shift, and go to state 39
    LP     shift, and go to state 40
    MINUS  shift, and go to state 41
    NOT    shift, and go to state 42

    Exp  go to state 58


State 41

   43 Exp: MINUS . Exp

    INT    shift, and go to state 36
    ID     shift, and go to state 37
    FLOAT  shift, and go to state 38
    DPLUS  shift, and go to state 39
    LP     shift, and go to state 40
    MINUS  shift, and go to state 41
    NOT    shift, and go to state 42

    Exp  go to state 59


State 42

   44 Exp: NOT . Exp

    INT    shift, and go to state 36
    ID     shift, and go to state 37
    FLOAT  shift, and go to state 38
    DPLUS  shift, and go to state 39
    LP     shift, and go to state 40
    MINUS  shift, and go to state 41
    NOT    shift, and go to state 42

    Exp  go to state 60


State 43

   22 Stm: IF . LP Exp RP Stm
   23    | IF . LP Exp RP Stm ELSE Stm

    LP  shift, and go to state 61


State 44

   24 Stm: WHILE . LP Exp RP Stm

    LP  shift, and go to state 62


State 45

   21 Stm: RETURN . Exp SEMI

    INT    shift, and go to state 36
    ID     shift, and go to state 37
    FLOAT  shift, and go to state 38
    DPLUS  shift, and go to state 39
    LP     shift, and go to state 40
    MINUS  shift, and go to state 41
    NOT    shift, and go to state 42

    Exp  go to state 63


State 46

   25 Stm: FOR . LP Exp SEMI Exp SEMI Exp RP Stm

    LP  shift, and go to state 64


State 47

   20 Stm: CompSt .

    $default  reduce using rule 20 (Stm)


State 48

   16 CompSt: LC DefList StmList . RC

    RC  shift, and go to state 65


State 49

   18 StmList: Stm . StmList

    INT     shift, and go to state 36
    ID      shift, and go to state 37
    FLOAT   shift, and go to state 38
    DPLUS   shift, and go to state 39
    LP      shift, and go to state 40
    LC      shift, and go to state 17
    MINUS   shift, and go to state 41
    NOT     shift, and go to state 42
    IF      shift, and go to state 43
    WHILE   shift, and go to state 44
    RETURN  shift, and go to state 45
    FOR     shift, and go to state 46

    $default  reduce using rule 17 (StmList)

    CompSt   go to state 47
    StmList  go to state 66
    Stm      go to state 49
    Exp      go to state 50


State 50

   19 Stm: Exp . SEMI
   34 Exp: Exp . ASSIGNOP Exp
   35    | Exp . AND Exp
   36    | Exp . OR Exp
   37    | Exp . RELOP Exp
   38    | Exp . PLUS Exp
   39    | Exp . MINUS Exp
   40    | Exp . STAR Exp
   41    | Exp . DIV Exp

    RELOP     shift, and go to state 67
    SEMI      shift, and go to state 68
    PLUS      shift, and go to state 69
    MINUS     shift, and go to state 70
    STAR      shift, and go to state 71
    DIV       shift, and go to state 72
    ASSIGNOP  shift, and go to state 73
    AND       shift, and go to state 74
    OR        shift, and go to state 75


State 51

   27 DefList: Def DefList .

    $default  reduce using rule 27 (DefList)


State 52

   14 VarList: ParamDec COMMA VarList .

    $default  reduce using rule 14 (VarList)


State 53

   33 Dec: VarDec ASSIGNOP . Exp

    INT    shift, and go to state 36
    ID     shift, and go to state 37
    FLOAT  shift, and go to state 38
    DPLUS  shift, and go to state 39
    LP     shift, and go to state 40
    MINUS  shift, and go to state 41
    NOT    shift, and go to state 42

    Exp  go to state 76


State 54

   29 Def: Specifier DecList SEMI .

    $default  reduce using rule 29 (Def)


State 55

   31 DecList: Dec COMMA . DecList

    ID  shift, and go to state 23

    VarDec   go to state 33
    DecList  go to state 77
    Dec      go to state 35


State 56

   46 Exp: ID LP . Args RP
   47    | ID LP . RP

    INT    shift, and go to state 36
    ID     shift, and go to state 37
    FLOAT  shift, and go to state 38
    DPLUS  shift, and go to state 39
    LP     shift, and go to state 40
    RP     shift, and go to state 78
    MINUS  shift, and go to state 41
    NOT    shift, and go to state 42

    Exp   go to state 79
    Args  go to state 80


State 57

   34 Exp: Exp . ASSIGNOP Exp
   35    | Exp . AND Exp
   36    | Exp . OR Exp
   37    | Exp . RELOP Exp
   38    | Exp . PLUS Exp
   39    | Exp . MINUS Exp
   40    | Exp . STAR Exp
   41    | Exp . DIV Exp
   45    | DPLUS Exp .

    $default  reduce using rule 45 (Exp)


State 58

   34 Exp: Exp . ASSIGNOP Exp
   35    | Exp . AND Exp
   36    | Exp . OR Exp
   37    | Exp . RELOP Exp
   38    | Exp . PLUS Exp
   39    | Exp . MINUS Exp
   40    | Exp . STAR Exp
   41    | Exp . DIV Exp
   42    | LP Exp . RP

    RELOP     shift, and go to state 67
    RP        shift, and go to state 81
    PLUS      shift, and go to state 69
    MINUS     shift, and go to state 70
    STAR      shift, and go to state 71
    DIV       shift, and go to state 72
    ASSIGNOP  shift, and go to state 73
    AND       shift, and go to state 74
    OR        shift, and go to state 75


State 59

   34 Exp: Exp . ASSIGNOP Exp
   35    | Exp . AND Exp
   36    | Exp . OR Exp
   37    | Exp . RELOP Exp
   38    | Exp . PLUS Exp
   39    | Exp . MINUS Exp
   40    | Exp . STAR Exp
   41    | Exp . DIV Exp
   43    | MINUS Exp .

    $default  reduce using rule 43 (Exp)


State 60

   34 Exp: Exp . ASSIGNOP Exp
   35    | Exp . AND Exp
   36    | Exp . OR Exp
   37    | Exp . RELOP Exp
   38    | Exp . PLUS Exp
   39    | Exp . MINUS Exp
   40    | Exp . STAR Exp
   41    | Exp . DIV Exp
   44    | NOT Exp .

    $default  reduce using rule 44 (Exp)


State 61

   22 Stm: IF LP . Exp RP Stm
   23    | IF LP . Exp RP Stm ELSE Stm

    INT    shift, and go to state 36
    ID     shift, and go to state 37
    FLOAT  shift, and go to state 38
    DPLUS  shift, and go to state 39
    LP     shift, and go to state 40
    MINUS  shift, and go to state 41
    NOT    shift, and go to state 42

    Exp  go to state 82


State 62

   24 Stm: WHILE LP . Exp RP Stm

    INT    shift, and go to state 36
    ID     shift, and go to state 37
    FLOAT  shift, and go to state 38
    DPLUS  shift, and go to state 39
    LP     shift, and go to state 40
    MINUS  shift, and go to state 41
    NOT    shift, and go to state 42

    Exp  go to state 83


State 63

   21 Stm: RETURN Exp . SEMI
   34 Exp: Exp . ASSIGNOP Exp
   35    | Exp . AND Exp
   36    | Exp . OR Exp
   37    | Exp . RELOP Exp
   38    | Exp . PLUS Exp
   39    | Exp . MINUS Exp
   40    | Exp . STAR Exp
   41    | Exp . DIV Exp

    RELOP     shift, and go to state 67
    SEMI      shift, and go to state 84
    PLUS      shift, and go to state 69
    MINUS     shift, and go to state 70
    STAR      shift, and go to state 71
    DIV       shift, and go to state 72
    ASSIGNOP  shift, and go to state 73
    AND       shift, and go to state 74
    OR        shift, and go to state 75


State 64

   25 Stm: FOR LP . Exp SEMI Exp SEMI Exp RP Stm

    INT    shift, and go to state 36
    ID     shift, and go to state 37
    FLOAT  shift, and go to state 38
    DPLUS  shift, and go to state 39
    LP     shift, and go to state 40
    MINUS  shift, and go to state 41
    NOT    shift, and go to state 42

    Exp  go to state 85


State 65

   16 CompSt: LC DefList StmList RC .

    $default  reduce using rule 16 (CompSt)


State 66

   18 StmList: Stm StmList .

    $default  reduce using rule 18 (StmList)


State 67

   37 Exp: Exp RELOP . Exp

    INT    shift, and go to state 36
    ID     shift, and go to state 37
    FLOAT  shift, and go to state 38
    DPLUS  shift, and go to state 39
    LP     shift, and go to state 40
    MINUS  shift, and go to state 41
    NOT    shift, and go to state 42

    Exp  go to state 86


State 68

   19 Stm: Exp SEMI .

    $default  reduce using rule 19 (Stm)


State 69

   38 Exp: Exp PLUS . Exp

    INT    shift, and go to state 36
    ID     shift, and go to state 37
    FLOAT  shift, and go to state 38
    DPLUS  shift, and go to state 39
    LP     shift, and go to state 40
    MINUS  shift, and go to state 41
    NOT    shift, and go to state 42

    Exp  go to state 87


State 70

   39 Exp: Exp MINUS . Exp

    INT    shift, and go to state 36
    ID     shift, and go to state 37
    FLOAT  shift, and go to state 38
    DPLUS  shift, and go to state 39
    LP     shift, and go to state 40
    MINUS  shift, and go to state 41
    NOT    shift, and go to state 42

    Exp  go to state 88


State 71

   40 Exp: Exp STAR . Exp

    INT    shift, and go to state 36
    ID     shift, and go to state 37
    FLOAT  shift, and go to state 38
    DPLUS  shift, and go to state 39
    LP     shift, and go to state 40
    MINUS  shift, and go to state 41
    NOT    shift, and go to state 42

    Exp  go to state 89


State 72

   41 Exp: Exp DIV . Exp

    INT    shift, and go to state 36
    ID     shift, and go to state 37
    FLOAT  shift, and go to state 38
    DPLUS  shift, and go to state 39
    LP     shift, and go to state 40
    MINUS  shift, and go to state 41
    NOT    shift, and go to state 42

    Exp  go to state 90


State 73

   34 Exp: Exp ASSIGNOP . Exp

    INT    shift, and go to state 36
    ID     shift, and go to state 37
    FLOAT  shift, and go to state 38
    DPLUS  shift, and go to state 39
    LP     shift, and go to state 40
    MINUS  shift, and go to state 41
    NOT    shift, and go to state 42

    Exp  go to state 91


State 74

   35 Exp: Exp AND . Exp

    INT    shift, and go to state 36
    ID     shift, and go to state 37
    FLOAT  shift, and go to state 38
    DPLUS  shift, and go to state 39
    LP     shift, and go to state 40
    MINUS  shift, and go to state 41
    NOT    shift, and go to state 42

    Exp  go to state 92


State 75

   36 Exp: Exp OR . Exp

    INT    shift, and go to state 36
    ID     shift, and go to state 37
    FLOAT  shift, and go to state 38
    DPLUS  shift, and go to state 39
    LP     shift, and go to state 40
    MINUS  shift, and go to state 41
    NOT    shift, and go to state 42

    Exp  go to state 93


State 76

   33 Dec: VarDec ASSIGNOP Exp .
   34 Exp: Exp . ASSIGNOP Exp
   35    | Exp . AND Exp
   36    | Exp . OR Exp
   37    | Exp . RELOP Exp
   38    | Exp . PLUS Exp
   39    | Exp . MINUS Exp
   40    | Exp . STAR Exp
   41    | Exp . DIV Exp

    RELOP     shift, and go to state 67
    PLUS      shift, and go to state 69
    MINUS     shift, and go to state 70
    STAR      shift, and go to state 71
    DIV       shift, and go to state 72
    ASSIGNOP  shift, and go to state 73
    AND       shift, and go to state 74
    OR        shift, and go to state 75

    $default  reduce using rule 33 (Dec)


State 77

   31 DecList: Dec COMMA DecList .

    $default  reduce using rule 31 (DecList)


State 78

   47 Exp: ID LP RP .

    $default  reduce using rule 47 (Exp)


State 79

   34 Exp: Exp . ASSIGNOP Exp
   35    | Exp . AND Exp
   36    | Exp . OR Exp
   37    | Exp . RELOP Exp
   38    | Exp . PLUS Exp
   39    | Exp . MINUS Exp
   40    | Exp . STAR Exp
   41    | Exp . DIV Exp
   51 Args: Exp . COMMA Args
   52     | Exp .

    RELOP     shift, and go to state 67
    COMMA     shift, and go to state 94
    PLUS      shift, and go to state 69
    MINUS     shift, and go to state 70
    STAR      shift, and go to state 71
    DIV       shift, and go to state 72
    ASSIGNOP  shift, and go to state 73
    AND       shift, and go to state 74
    OR        shift, and go to state 75

    $default  reduce using rule 52 (Args)


State 80

   46 Exp: ID LP Args . RP

    RP  shift, and go to state 95


State 81

   42 Exp: LP Exp RP .

    $default  reduce using rule 42 (Exp)


State 82

   22 Stm: IF LP Exp . RP Stm
   23    | IF LP Exp . RP Stm ELSE Stm
   34 Exp: Exp . ASSIGNOP Exp
   35    | Exp . AND Exp
   36    | Exp . OR Exp
   37    | Exp . RELOP Exp
   38    | Exp . PLUS Exp
   39    | Exp . MINUS Exp
   40    | Exp . STAR Exp
   41    | Exp . DIV Exp

    RELOP     shift, and go to state 67
    RP        shift, and go to state 96
    PLUS      shift, and go to state 69
    MINUS     shift, and go to state 70
    STAR      shift, and go to state 71
    DIV       shift, and go to state 72
    ASSIGNOP  shift, and go to state 73
    AND       shift, and go to state 74
    OR        shift, and go to state 75


State 83

   24 Stm: WHILE LP Exp . RP Stm
   34 Exp: Exp . ASSIGNOP Exp
   35    | Exp . AND Exp
   36    | Exp . OR Exp
   37    | Exp . RELOP Exp
   38    | Exp . PLUS Exp
   39    | Exp . MINUS Exp
   40    | Exp . STAR Exp
   41    | Exp . DIV Exp

    RELOP     shift, and go to state 67
    RP        shift, and go to state 97
    PLUS      shift, and go to state 69
    MINUS     shift, and go to state 70
    STAR      shift, and go to state 71
    DIV       shift, and go to state 72
    ASSIGNOP  shift, and go to state 73
    AND       shift, and go to state 74
    OR        shift, and go to state 75


State 84

   21 Stm: RETURN Exp SEMI .

    $default  reduce using rule 21 (Stm)


State 85

   25 Stm: FOR LP Exp . SEMI Exp SEMI Exp RP Stm
   34 Exp: Exp . ASSIGNOP Exp
   35    | Exp . AND Exp
   36    | Exp . OR Exp
   37    | Exp . RELOP Exp
   38    | Exp . PLUS Exp
   39    | Exp . MINUS Exp
   40    | Exp . STAR Exp
   41    | Exp . DIV Exp

    RELOP     shift, and go to state 67
    SEMI      shift, and go to state 98
    PLUS      shift, and go to state 69
    MINUS     shift, and go to state 70
    STAR      shift, and go to state 71
    DIV       shift, and go to state 72
    ASSIGNOP  shift, and go to state 73
    AND       shift, and go to state 74
    OR        shift, and go to state 75


State 86

   34 Exp: Exp . ASSIGNOP Exp
   35    | Exp . AND Exp
   36    | Exp . OR Exp
   37    | Exp . RELOP Exp
   37    | Exp RELOP Exp .
   38    | Exp . PLUS Exp
   39    | Exp . MINUS Exp
   40    | Exp . STAR Exp
   41    | Exp . DIV Exp

    PLUS   shift, and go to state 69
    MINUS  shift, and go to state 70
    STAR   shift, and go to state 71
    DIV    shift, and go to state 72

    $default  reduce using rule 37 (Exp)


State 87

   34 Exp: Exp . ASSIGNOP Exp
   35    | Exp . AND Exp
   36    | Exp . OR Exp
   37    | Exp . RELOP Exp
   38    | Exp . PLUS Exp
   38    | Exp PLUS Exp .
   39    | Exp . MINUS Exp
   40    | Exp . STAR Exp
   41    | Exp . DIV Exp

    STAR  shift, and go to state 71
    DIV   shift, and go to state 72

    $default  reduce using rule 38 (Exp)


State 88

   34 Exp: Exp . ASSIGNOP Exp
   35    | Exp . AND Exp
   36    | Exp . OR Exp
   37    | Exp . RELOP Exp
   38    | Exp . PLUS Exp
   39    | Exp . MINUS Exp
   39    | Exp MINUS Exp .
   40    | Exp . STAR Exp
   41    | Exp . DIV Exp

    STAR  shift, and go to state 71
    DIV   shift, and go to state 72

    $default  reduce using rule 39 (Exp)


State 89

   34 Exp: Exp . ASSIGNOP Exp
   35    | Exp . AND Exp
   36    | Exp . OR Exp
   37    | Exp . RELOP Exp
   38    | Exp . PLUS Exp
   39    | Exp . MINUS Exp
   40    | Exp . STAR Exp
   40    | Exp STAR Exp .
   41    | Exp . DIV Exp

    $default  reduce using rule 40 (Exp)


State 90

   34 Exp: Exp . ASSIGNOP Exp
   35    | Exp . AND Exp
   36    | Exp . OR Exp
   37    | Exp . RELOP Exp
   38    | Exp . PLUS Exp
   39    | Exp . MINUS Exp
   40    | Exp . STAR Exp
   41    | Exp . DIV Exp
   41    | Exp DIV Exp .

    $default  reduce using rule 41 (Exp)


State 91

   34 Exp: Exp . ASSIGNOP Exp
   34    | Exp ASSIGNOP Exp .
   35    | Exp . AND Exp
   36    | Exp . OR Exp
   37    | Exp . RELOP Exp
   38    | Exp . PLUS Exp
   39    | Exp . MINUS Exp
   40    | Exp . STAR Exp
   41    | Exp . DIV Exp

    RELOP  shift, and go to state 67
    PLUS   shift, and go to state 69
    MINUS  shift, and go to state 70
    STAR   shift, and go to state 71
    DIV    shift, and go to state 72
    AND    shift, and go to state 74
    OR     shift, and go to state 75

    $default  reduce using rule 34 (Exp)


State 92

   34 Exp: Exp . ASSIGNOP Exp
   35    | Exp . AND Exp
   35    | Exp AND Exp .
   36    | Exp . OR Exp
   37    | Exp . RELOP Exp
   38    | Exp . PLUS Exp
   39    | Exp . MINUS Exp
   40    | Exp . STAR Exp
   41    | Exp . DIV Exp

    RELOP  shift, and go to state 67
    PLUS   shift, and go to state 69
    MINUS  shift, and go to state 70
    STAR   shift, and go to state 71
    DIV    shift, and go to state 72

    $default  reduce using rule 35 (Exp)


State 93

   34 Exp: Exp . ASSIGNOP Exp
   35    | Exp . AND Exp
   36    | Exp . OR Exp
   36    | Exp OR Exp .
   37    | Exp . RELOP Exp
   38    | Exp . PLUS Exp
   39    | Exp . MINUS Exp
   40    | Exp . STAR Exp
   41    | Exp . DIV Exp

    RELOP  shift, and go to state 67
    PLUS   shift, and go to state 69
    MINUS  shift, and go to state 70
    STAR   shift, and go to state 71
    DIV    shift, and go to state 72
    AND    shift, and go to state 74

    $default  reduce using rule 36 (Exp)


State 94

   51 Args: Exp COMMA . Args

    INT    shift, and go to state 36
    ID     shift, and go to state 37
    FLOAT  shift, and go to state 38
    DPLUS  shift, and go to state 39
    LP     shift, and go to state 40
    MINUS  shift, and go to state 41
    NOT    shift, and go to state 42

    Exp   go to state 79
    Args  go to state 99


State 95

   46 Exp: ID LP Args RP .

    $default  reduce using rule 46 (Exp)


State 96

   22 Stm: IF LP Exp RP . Stm
   23    | IF LP Exp RP . Stm ELSE Stm

    INT     shift, and go to state 36
    ID      shift, and go to state 37
    FLOAT   shift, and go to state 38
    DPLUS   shift, and go to state 39
    LP      shift, and go to state 40
    LC      shift, and go to state 17
    MINUS   shift, and go to state 41
    NOT     shift, and go to state 42
    IF      shift, and go to state 43
    WHILE   shift, and go to state 44
    RETURN  shift, and go to state 45
    FOR     shift, and go to state 46

    CompSt  go to state 47
    Stm     go to state 100
    Exp     go to state 50


State 97

   24 Stm: WHILE LP Exp RP . Stm

    INT     shift, and go to state 36
    ID      shift, and go to state 37
    FLOAT   shift, and go to state 38
    DPLUS   shift, and go to state 39
    LP      shift, and go to state 40
    LC      shift, and go to state 17
    MINUS   shift, and go to state 41
    NOT     shift, and go to state 42
    IF      shift, and go to state 43
    WHILE   shift, and go to state 44
    RETURN  shift, and go to state 45
    FOR     shift, and go to state 46

    CompSt  go to state 47
    Stm     go to state 101
    Exp     go to state 50


State 98

   25 Stm: FOR LP Exp SEMI . Exp SEMI Exp RP Stm

    INT    shift, and go to state 36
    ID     shift, and go to state 37
    FLOAT  shift, and go to state 38
    DPLUS  shift, and go to state 39
    LP     shift, and go to state 40
    MINUS  shift, and go to state 41
    NOT    shift, and go to state 42

    Exp  go to state 102


State 99

   51 Args: Exp COMMA Args .

    $default  reduce using rule 51 (Args)


State 100

   22 Stm: IF LP Exp RP Stm .
   23    | IF LP Exp RP Stm . ELSE Stm

    ELSE  shift, and go to state 103

    $default  reduce using rule 22 (Stm)


State 101

   24 Stm: WHILE LP Exp RP Stm .

    $default  reduce using rule 24 (Stm)


State 102

   25 Stm: FOR LP Exp SEMI Exp . SEMI Exp RP Stm
   34 Exp: Exp . ASSIGNOP Exp
   35    | Exp . AND Exp
   36    | Exp . OR Exp
   37    | Exp . RELOP Exp
   38    | Exp . PLUS Exp
   39    | Exp . MINUS Exp
   40    | Exp . STAR Exp
   41    | Exp . DIV Exp

    RELOP     shift, and go to state 67
    SEMI      shift, and go to state 104
    PLUS      shift, and go to state 69
    MINUS     shift, and go to state 70
    STAR      shift, and go to state 71
    DIV       shift, and go to state 72
    ASSIGNOP  shift, and go to state 73
    AND       shift, and go to state 74
    OR        shift, and go to state 75


State 103

   23 Stm: IF LP Exp RP Stm ELSE . Stm

    INT     shift, and go to state 36
    ID      shift, and go to state 37
    FLOAT   shift, and go to state 38
    DPLUS   shift, and go to state 39
    LP      shift, and go to state 40
    LC      shift, and go to state 17
    MINUS   shift, and go to state 41
    NOT     shift, and go to state 42
    IF      shift, and go to state 43
    WHILE   shift, and go to state 44
    RETURN  shift, and go to state 45
    FOR     shift, and go to state 46

    CompSt  go to state 47
    Stm     go to state 105
    Exp     go to state 50


State 104

   25 Stm: FOR LP Exp SEMI Exp SEMI . Exp RP Stm

    INT    shift, and go to state 36
    ID     shift, and go to state 37
    FLOAT  shift, and go to state 38
    DPLUS  shift, and go to state 39
    LP     shift, and go to state 40
    MINUS  shift, and go to state 41
    NOT    shift, and go to state 42

    Exp  go to state 106


State 105

   23 Stm: IF LP Exp RP Stm ELSE Stm .

    $default  reduce using rule 23 (Stm)


State 106

   25 Stm: FOR LP Exp SEMI Exp SEMI Exp . RP Stm
   34 Exp: Exp . ASSIGNOP Exp
   35    | Exp . AND Exp
   36    | Exp . OR Exp
   37    | Exp . RELOP Exp
   38    | Exp . PLUS Exp
   39    | Exp . MINUS Exp
   40    | Exp . STAR Exp
   41    | Exp . DIV Exp

    RELOP     shift, and go to state 67
    RP        shift, and go to state 107
    PLUS      shift, and go to state 69
    MINUS     shift, and go to state 70
    STAR      shift, and go to state 71
    DIV       shift, and go to state 72
    ASSIGNOP  shift, and go to state 73
    AND       shift, and go to state 74
    OR        shift, and go to state 75


State 107

   25 Stm: FOR LP Exp SEMI Exp SEMI Exp RP . Stm

    INT     shift, and go to state 36
    ID      shift, and go to state 37
    FLOAT   shift, and go to state 38
    DPLUS   shift, and go to state 39
    LP      shift, and go to state 40
    LC      shift, and go to state 17
    MINUS   shift, and go to state 41
    NOT     shift, and go to state 42
    IF      shift, and go to state 43
    WHILE   shift, and go to state 44
    RETURN  shift, and go to state 45
    FOR     shift, and go to state 46

    CompSt  go to state 47
    Stm     go to state 108
    Exp     go to state 50


State 108

   25 Stm: FOR LP Exp SEMI Exp SEMI Exp RP Stm .

    $default  reduce using rule 25 (Stm)
