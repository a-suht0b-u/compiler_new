Terminals unused in grammar

    GE
    GT
    LE
    LT
    NE
    STRUCT
    SWITCH
    CASE
    COLON
    DEFAULT
    INCREASE
    DECREASE
    EXT_DEF_LIST
    EXT_VAR_DEF
    FUNC_DEF
    FUNC_DEC
    EXT_DEC_LIST
    PARAM_LIST
    PARAM_DEC
    VAR_DEF
    DEC_LIST
    DEF_LIST
    COMP_STM
    STM_LIST
    EXP_STMT
    IF_THEN
    IF_THEN_ELSE
    DPLUS_PREFIX
    DPLUS_POSTFIX
    DMINUS_PREFIX
    DMINUS_POSTFIX
    ARRAY
    ARRAY_LIST
    ARRAY_VAL
    ARRAY_VAL_LIST
    ARRAY_VAL_1
    ARRAY_VAL_N
    FUNC_CALL
    ARGS
    FUNCTION
    PARAM
    ARG
    CALL
    LABEL
    GOTO
    JLT
    JLE
    JGT
    JGE
    EQ
    NEQ
    LM
    RM


Grammar

    0 $accept: program $end

    1 program: ExtDefList

    2 ExtDefList: %empty
    3           | ExtDef ExtDefList

    4 ExtDef: Specifier ExtDecList SEMI
    5       | Specifier FuncDec CompSt
    6       | error SEMI

    7 Specifier: TYPE

    8 ExtDecList: VarDec
    9           | VarDec COMMA ExtDecList

   10 VarDec: ID
   11       | ID ArrayList

   12 ArrayList: LB INT RB
   13          | LB INT RB ArrayList

   14 FuncDec: ID LP VarList RP
   15        | ID LP RP

   16 VarList: ParamDec
   17        | ParamDec COMMA VarList

   18 ParamDec: Specifier VarDec

   19 CompSt: LC DefList StmList RC

   20 StmList: %empty
   21        | Stm StmList

   22 Stm: Exp SEMI
   23    | CompSt
   24    | RETURN Exp SEMI
   25    | IF LP Exp RP Stm
   26    | IF LP Exp RP Stm ELSE Stm
   27    | WHILE LP Exp RP Stm
   28    | FOR LP Def Exp SEMI Exp RP Stm

   29 DefList: %empty
   30        | Def DefList
   31        | error SEMI

   32 Def: Specifier DecList SEMI

   33 DecList: Dec
   34        | Dec COMMA DecList

   35 Dec: VarDec
   36    | VarDec ASSIGNOP Exp

   37 Exp: Exp ASSIGNOP Exp
   38    | Exp AND Exp
   39    | Exp OR Exp
   40    | Exp RELOP Exp
   41    | Exp PLUS Exp
   42    | Exp MINUS Exp
   43    | Exp STAR Exp
   44    | Exp DIV Exp
   45    | LP Exp RP
   46    | MINUS Exp
   47    | NOT Exp
   48    | DPLUS Exp
   49    | Exp DPLUS
   50    | DMINUS Exp
   51    | Exp DMINUS
   52    | ID LP Args RP
   53    | ID LP RP
   54    | ID
   55    | INT
   56    | FLOAT
   57    | CHAR
   58    | BREAK
   59    | CONTINUE
   60    | LC ArrayValListN RC

   61 ArrayValListN: ArrayValListN COMMA ArrayValList1
   62              | ArrayValList1
   63              | ArrayValList

   64 ArrayValList1: LC ArrayValList RC

   65 ArrayValList: ArrayValList COMMA Exp
   66             | Exp

   67 Args: Exp COMMA Args
   68     | Exp


Terminals, with rules where they appear

    $end (0) 0
    error (256) 6 31
    INT <type_int> (258) 12 13 55
    ID <type_id> (259) 10 11 14 15 52 53 54
    RELOP <type_id> (260) 40
    TYPE <type_id> (261) 7
    FLOAT <type_float> (262) 56
    CHAR <type_char> (263) 57
    DPLUS (264) 48 49
    DMINUS (265) 50 51
    GE (266)
    GT (267)
    LE (268)
    LP (269) 14 15 25 26 27 28 45 52 53
    LT (270)
    NE (271)
    RP (272) 14 15 25 26 27 28 45 52 53
    LB (273) 12 13
    RB (274) 12 13
    LC (275) 19 60 64
    RC (276) 19 60 64
    SEMI (277) 4 6 22 24 28 31 32
    COMMA (278) 9 17 34 61 65 67
    PLUS (279) 41
    MINUS (280) 42 46
    STAR (281) 43
    DIV (282) 44
    ASSIGNOP (283) 36 37
    AND (284) 38
    OR (285) 39
    NOT (286) 47
    IF (287) 25 26
    ELSE (288) 26
    WHILE (289) 27
    RETURN (290) 24
    STRUCT (291)
    FOR (292) 28
    SWITCH (293)
    CASE (294)
    COLON (295)
    DEFAULT (296)
    BREAK (297) 58
    CONTINUE (298) 59
    INCREASE (299)
    DECREASE (300)
    EXT_DEF_LIST (301)
    EXT_VAR_DEF (302)
    FUNC_DEF (303)
    FUNC_DEC (304)
    EXT_DEC_LIST (305)
    PARAM_LIST (306)
    PARAM_DEC (307)
    VAR_DEF (308)
    DEC_LIST (309)
    DEF_LIST (310)
    COMP_STM (311)
    STM_LIST (312)
    EXP_STMT (313)
    IF_THEN (314)
    IF_THEN_ELSE (315)
    DPLUS_PREFIX (316)
    DPLUS_POSTFIX (317)
    DMINUS_PREFIX (318)
    DMINUS_POSTFIX (319)
    ARRAY (320)
    ARRAY_LIST (321)
    ARRAY_VAL (322)
    ARRAY_VAL_LIST (323)
    ARRAY_VAL_1 (324)
    ARRAY_VAL_N (325)
    FUNC_CALL (326)
    ARGS (327)
    FUNCTION (328)
    PARAM (329)
    ARG (330)
    CALL (331)
    LABEL (332)
    GOTO (333)
    JLT (334)
    JLE (335)
    JGT (336)
    JGE (337)
    EQ (338)
    NEQ (339)
    LCOMMA (340)
    LM (341)
    RM (342)
    UMINUS (343)
    LOWER_THEN_ELSE (344)


Nonterminals, with rules where they appear

    $accept (90)
        on left: 0
    program <ptr> (91)
        on left: 1
        on right: 0
    ExtDefList <ptr> (92)
        on left: 2 3
        on right: 1 3
    ExtDef <ptr> (93)
        on left: 4 5 6
        on right: 3
    Specifier <ptr> (94)
        on left: 7
        on right: 4 5 18 32
    ExtDecList <ptr> (95)
        on left: 8 9
        on right: 4 9
    VarDec <ptr> (96)
        on left: 10 11
        on right: 8 9 18 35 36
    ArrayList <ptr> (97)
        on left: 12 13
        on right: 11 13
    FuncDec <ptr> (98)
        on left: 14 15
        on right: 5
    VarList <ptr> (99)
        on left: 16 17
        on right: 14 17
    ParamDec <ptr> (100)
        on left: 18
        on right: 16 17
    CompSt <ptr> (101)
        on left: 19
        on right: 5 23
    StmList <ptr> (102)
        on left: 20 21
        on right: 19 21
    Stm <ptr> (103)
        on left: 22 23 24 25 26 27 28
        on right: 21 25 26 27 28
    DefList <ptr> (104)
        on left: 29 30 31
        on right: 19 30
    Def <ptr> (105)
        on left: 32
        on right: 28 30
    DecList <ptr> (106)
        on left: 33 34
        on right: 32 34
    Dec <ptr> (107)
        on left: 35 36
        on right: 33 34
    Exp <ptr> (108)
        on left: 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60
        on right: 22 24 25 26 27 28 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 65 66 67 68
    ArrayValListN <ptr> (109)
        on left: 61 62 63
        on right: 60 61
    ArrayValList1 <ptr> (110)
        on left: 64
        on right: 61 62
    ArrayValList <ptr> (111)
        on left: 65 66
        on right: 63 64 65
    Args <ptr> (112)
        on left: 67 68
        on right: 52 67


State 0

    0 $accept: . program $end

    error  shift, and go to state 1
    TYPE   shift, and go to state 2

    $end  reduce using rule 2 (ExtDefList)

    program     go to state 3
    ExtDefList  go to state 4
    ExtDef      go to state 5
    Specifier   go to state 6


State 1

    6 ExtDef: error . SEMI

    SEMI  shift, and go to state 7


State 2

    7 Specifier: TYPE .

    $default  reduce using rule 7 (Specifier)


State 3

    0 $accept: program . $end

    $end  shift, and go to state 8


State 4

    1 program: ExtDefList .

    $default  reduce using rule 1 (program)


State 5

    3 ExtDefList: ExtDef . ExtDefList

    error  shift, and go to state 1
    TYPE   shift, and go to state 2

    $end  reduce using rule 2 (ExtDefList)

    ExtDefList  go to state 9
    ExtDef      go to state 5
    Specifier   go to state 6


State 6

    4 ExtDef: Specifier . ExtDecList SEMI
    5       | Specifier . FuncDec CompSt

    ID  shift, and go to state 10

    ExtDecList  go to state 11
    VarDec      go to state 12
    FuncDec     go to state 13


State 7

    6 ExtDef: error SEMI .

    $default  reduce using rule 6 (ExtDef)


State 8

    0 $accept: program $end .

    $default  accept


State 9

    3 ExtDefList: ExtDef ExtDefList .

    $default  reduce using rule 3 (ExtDefList)


State 10

   10 VarDec: ID .
   11       | ID . ArrayList
   14 FuncDec: ID . LP VarList RP
   15        | ID . LP RP

    LP  shift, and go to state 14
    LB  shift, and go to state 15

    $default  reduce using rule 10 (VarDec)

    ArrayList  go to state 16


State 11

    4 ExtDef: Specifier ExtDecList . SEMI

    SEMI  shift, and go to state 17


State 12

    8 ExtDecList: VarDec .
    9           | VarDec . COMMA ExtDecList

    COMMA  shift, and go to state 18

    $default  reduce using rule 8 (ExtDecList)


State 13

    5 ExtDef: Specifier FuncDec . CompSt

    LC  shift, and go to state 19

    CompSt  go to state 20


State 14

   14 FuncDec: ID LP . VarList RP
   15        | ID LP . RP

    TYPE  shift, and go to state 2
    RP    shift, and go to state 21

    Specifier  go to state 22
    VarList    go to state 23
    ParamDec   go to state 24


State 15

   12 ArrayList: LB . INT RB
   13          | LB . INT RB ArrayList

    INT  shift, and go to state 25


State 16

   11 VarDec: ID ArrayList .

    $default  reduce using rule 11 (VarDec)


State 17

    4 ExtDef: Specifier ExtDecList SEMI .

    $default  reduce using rule 4 (ExtDef)


State 18

    9 ExtDecList: VarDec COMMA . ExtDecList

    ID  shift, and go to state 26

    ExtDecList  go to state 27
    VarDec      go to state 12


State 19

   19 CompSt: LC . DefList StmList RC

    error  shift, and go to state 28
    TYPE   shift, and go to state 2

    INT       reduce using rule 29 (DefList)
    ID        reduce using rule 29 (DefList)
    FLOAT     reduce using rule 29 (DefList)
    CHAR      reduce using rule 29 (DefList)
    DPLUS     reduce using rule 29 (DefList)
    DMINUS    reduce using rule 29 (DefList)
    LP        reduce using rule 29 (DefList)
    LC        reduce using rule 29 (DefList)
    RC        reduce using rule 29 (DefList)
    MINUS     reduce using rule 29 (DefList)
    NOT       reduce using rule 29 (DefList)
    IF        reduce using rule 29 (DefList)
    WHILE     reduce using rule 29 (DefList)
    RETURN    reduce using rule 29 (DefList)
    FOR       reduce using rule 29 (DefList)
    BREAK     reduce using rule 29 (DefList)
    CONTINUE  reduce using rule 29 (DefList)

    Specifier  go to state 29
    DefList    go to state 30
    Def        go to state 31


State 20

    5 ExtDef: Specifier FuncDec CompSt .

    $default  reduce using rule 5 (ExtDef)


State 21

   15 FuncDec: ID LP RP .

    $default  reduce using rule 15 (FuncDec)


State 22

   18 ParamDec: Specifier . VarDec

    ID  shift, and go to state 26

    VarDec  go to state 32


State 23

   14 FuncDec: ID LP VarList . RP

    RP  shift, and go to state 33


State 24

   16 VarList: ParamDec .
   17        | ParamDec . COMMA VarList

    COMMA  shift, and go to state 34

    $default  reduce using rule 16 (VarList)


State 25

   12 ArrayList: LB INT . RB
   13          | LB INT . RB ArrayList

    RB  shift, and go to state 35


State 26

   10 VarDec: ID .
   11       | ID . ArrayList

    LB  shift, and go to state 15

    $default  reduce using rule 10 (VarDec)

    ArrayList  go to state 16


State 27

    9 ExtDecList: VarDec COMMA ExtDecList .

    $default  reduce using rule 9 (ExtDecList)


State 28

   31 DefList: error . SEMI

    SEMI  shift, and go to state 36


State 29

   32 Def: Specifier . DecList SEMI

    ID  shift, and go to state 26

    VarDec   go to state 37
    DecList  go to state 38
    Dec      go to state 39


State 30

   19 CompSt: LC DefList . StmList RC

    INT       shift, and go to state 40
    ID        shift, and go to state 41
    FLOAT     shift, and go to state 42
    CHAR      shift, and go to state 43
    DPLUS     shift, and go to state 44
    DMINUS    shift, and go to state 45
    LP        shift, and go to state 46
    LC        shift, and go to state 47
    MINUS     shift, and go to state 48
    NOT       shift, and go to state 49
    IF        shift, and go to state 50
    WHILE     shift, and go to state 51
    RETURN    shift, and go to state 52
    FOR       shift, and go to state 53
    BREAK     shift, and go to state 54
    CONTINUE  shift, and go to state 55

    $default  reduce using rule 20 (StmList)

    CompSt   go to state 56
    StmList  go to state 57
    Stm      go to state 58
    Exp      go to state 59


State 31

   30 DefList: Def . DefList

    error  shift, and go to state 28
    TYPE   shift, and go to state 2

    INT       reduce using rule 29 (DefList)
    ID        reduce using rule 29 (DefList)
    FLOAT     reduce using rule 29 (DefList)
    CHAR      reduce using rule 29 (DefList)
    DPLUS     reduce using rule 29 (DefList)
    DMINUS    reduce using rule 29 (DefList)
    LP        reduce using rule 29 (DefList)
    LC        reduce using rule 29 (DefList)
    RC        reduce using rule 29 (DefList)
    MINUS     reduce using rule 29 (DefList)
    NOT       reduce using rule 29 (DefList)
    IF        reduce using rule 29 (DefList)
    WHILE     reduce using rule 29 (DefList)
    RETURN    reduce using rule 29 (DefList)
    FOR       reduce using rule 29 (DefList)
    BREAK     reduce using rule 29 (DefList)
    CONTINUE  reduce using rule 29 (DefList)

    Specifier  go to state 29
    DefList    go to state 60
    Def        go to state 31


State 32

   18 ParamDec: Specifier VarDec .

    $default  reduce using rule 18 (ParamDec)


State 33

   14 FuncDec: ID LP VarList RP .

    $default  reduce using rule 14 (FuncDec)


State 34

   17 VarList: ParamDec COMMA . VarList

    TYPE  shift, and go to state 2

    Specifier  go to state 22
    VarList    go to state 61
    ParamDec   go to state 24


State 35

   12 ArrayList: LB INT RB .
   13          | LB INT RB . ArrayList

    LB  shift, and go to state 15

    $default  reduce using rule 12 (ArrayList)

    ArrayList  go to state 62


State 36

   31 DefList: error SEMI .

    $default  reduce using rule 31 (DefList)


State 37

   35 Dec: VarDec .
   36    | VarDec . ASSIGNOP Exp

    ASSIGNOP  shift, and go to state 63

    $default  reduce using rule 35 (Dec)


State 38

   32 Def: Specifier DecList . SEMI

    SEMI  shift, and go to state 64


State 39

   33 DecList: Dec .
   34        | Dec . COMMA DecList

    COMMA  shift, and go to state 65

    $default  reduce using rule 33 (DecList)


State 40

   55 Exp: INT .

    $default  reduce using rule 55 (Exp)


State 41

   52 Exp: ID . LP Args RP
   53    | ID . LP RP
   54    | ID .

    LP  shift, and go to state 66

    $default  reduce using rule 54 (Exp)


State 42

   56 Exp: FLOAT .

    $default  reduce using rule 56 (Exp)


State 43

   57 Exp: CHAR .

    $default  reduce using rule 57 (Exp)


State 44

   48 Exp: DPLUS . Exp

    INT       shift, and go to state 40
    ID        shift, and go to state 41
    FLOAT     shift, and go to state 42
    CHAR      shift, and go to state 43
    DPLUS     shift, and go to state 44
    DMINUS    shift, and go to state 45
    LP        shift, and go to state 46
    LC        shift, and go to state 67
    MINUS     shift, and go to state 48
    NOT       shift, and go to state 49
    BREAK     shift, and go to state 54
    CONTINUE  shift, and go to state 55

    Exp  go to state 68


State 45

   50 Exp: DMINUS . Exp

    INT       shift, and go to state 40
    ID        shift, and go to state 41
    FLOAT     shift, and go to state 42
    CHAR      shift, and go to state 43
    DPLUS     shift, and go to state 44
    DMINUS    shift, and go to state 45
    LP        shift, and go to state 46
    LC        shift, and go to state 67
    MINUS     shift, and go to state 48
    NOT       shift, and go to state 49
    BREAK     shift, and go to state 54
    CONTINUE  shift, and go to state 55

    Exp  go to state 69


State 46

   45 Exp: LP . Exp RP

    INT       shift, and go to state 40
    ID        shift, and go to state 41
    FLOAT     shift, and go to state 42
    CHAR      shift, and go to state 43
    DPLUS     shift, and go to state 44
    DMINUS    shift, and go to state 45
    LP        shift, and go to state 46
    LC        shift, and go to state 67
    MINUS     shift, and go to state 48
    NOT       shift, and go to state 49
    BREAK     shift, and go to state 54
    CONTINUE  shift, and go to state 55

    Exp  go to state 70


State 47

   19 CompSt: LC . DefList StmList RC
   60 Exp: LC . ArrayValListN RC

    error     shift, and go to state 28
    TYPE      shift, and go to state 2
    DPLUS     shift, and go to state 44
    DMINUS    shift, and go to state 45
    LP        shift, and go to state 46
    LC        shift, and go to state 71
    MINUS     shift, and go to state 48
    NOT       shift, and go to state 49
    BREAK     shift, and go to state 54
    CONTINUE  shift, and go to state 55

    INT     reduce using rule 29 (DefList)
    ID      reduce using rule 29 (DefList)
    FLOAT   reduce using rule 29 (DefList)
    CHAR    reduce using rule 29 (DefList)
    RC      reduce using rule 29 (DefList)
    IF      reduce using rule 29 (DefList)
    WHILE   reduce using rule 29 (DefList)
    RETURN  reduce using rule 29 (DefList)
    FOR     reduce using rule 29 (DefList)

    Specifier      go to state 29
    DefList        go to state 30
    Def            go to state 31
    Exp            go to state 72
    ArrayValListN  go to state 73
    ArrayValList1  go to state 74
    ArrayValList   go to state 75


State 48

   46 Exp: MINUS . Exp

    INT       shift, and go to state 40
    ID        shift, and go to state 41
    FLOAT     shift, and go to state 42
    CHAR      shift, and go to state 43
    DPLUS     shift, and go to state 44
    DMINUS    shift, and go to state 45
    LP        shift, and go to state 46
    LC        shift, and go to state 67
    MINUS     shift, and go to state 48
    NOT       shift, and go to state 49
    BREAK     shift, and go to state 54
    CONTINUE  shift, and go to state 55

    Exp  go to state 76


State 49

   47 Exp: NOT . Exp

    INT       shift, and go to state 40
    ID        shift, and go to state 41
    FLOAT     shift, and go to state 42
    CHAR      shift, and go to state 43
    DPLUS     shift, and go to state 44
    DMINUS    shift, and go to state 45
    LP        shift, and go to state 46
    LC        shift, and go to state 67
    MINUS     shift, and go to state 48
    NOT       shift, and go to state 49
    BREAK     shift, and go to state 54
    CONTINUE  shift, and go to state 55

    Exp  go to state 77


State 50

   25 Stm: IF . LP Exp RP Stm
   26    | IF . LP Exp RP Stm ELSE Stm

    LP  shift, and go to state 78


State 51

   27 Stm: WHILE . LP Exp RP Stm

    LP  shift, and go to state 79


State 52

   24 Stm: RETURN . Exp SEMI

    INT       shift, and go to state 40
    ID        shift, and go to state 41
    FLOAT     shift, and go to state 42
    CHAR      shift, and go to state 43
    DPLUS     shift, and go to state 44
    DMINUS    shift, and go to state 45
    LP        shift, and go to state 46
    LC        shift, and go to state 67
    MINUS     shift, and go to state 48
    NOT       shift, and go to state 49
    BREAK     shift, and go to state 54
    CONTINUE  shift, and go to state 55

    Exp  go to state 80


State 53

   28 Stm: FOR . LP Def Exp SEMI Exp RP Stm

    LP  shift, and go to state 81


State 54

   58 Exp: BREAK .

    $default  reduce using rule 58 (Exp)


State 55

   59 Exp: CONTINUE .

    $default  reduce using rule 59 (Exp)


State 56

   23 Stm: CompSt .

    $default  reduce using rule 23 (Stm)


State 57

   19 CompSt: LC DefList StmList . RC

    RC  shift, and go to state 82


State 58

   21 StmList: Stm . StmList

    INT       shift, and go to state 40
    ID        shift, and go to state 41
    FLOAT     shift, and go to state 42
    CHAR      shift, and go to state 43
    DPLUS     shift, and go to state 44
    DMINUS    shift, and go to state 45
    LP        shift, and go to state 46
    LC        shift, and go to state 47
    MINUS     shift, and go to state 48
    NOT       shift, and go to state 49
    IF        shift, and go to state 50
    WHILE     shift, and go to state 51
    RETURN    shift, and go to state 52
    FOR       shift, and go to state 53
    BREAK     shift, and go to state 54
    CONTINUE  shift, and go to state 55

    $default  reduce using rule 20 (StmList)

    CompSt   go to state 56
    StmList  go to state 83
    Stm      go to state 58
    Exp      go to state 59


State 59

   22 Stm: Exp . SEMI
   37 Exp: Exp . ASSIGNOP Exp
   38    | Exp . AND Exp
   39    | Exp . OR Exp
   40    | Exp . RELOP Exp
   41    | Exp . PLUS Exp
   42    | Exp . MINUS Exp
   43    | Exp . STAR Exp
   44    | Exp . DIV Exp
   49    | Exp . DPLUS
   51    | Exp . DMINUS

    RELOP     shift, and go to state 84
    DPLUS     shift, and go to state 85
    DMINUS    shift, and go to state 86
    SEMI      shift, and go to state 87
    PLUS      shift, and go to state 88
    MINUS     shift, and go to state 89
    STAR      shift, and go to state 90
    DIV       shift, and go to state 91
    ASSIGNOP  shift, and go to state 92
    AND       shift, and go to state 93
    OR        shift, and go to state 94


State 60

   30 DefList: Def DefList .

    $default  reduce using rule 30 (DefList)


State 61

   17 VarList: ParamDec COMMA VarList .

    $default  reduce using rule 17 (VarList)


State 62

   13 ArrayList: LB INT RB ArrayList .

    $default  reduce using rule 13 (ArrayList)


State 63

   36 Dec: VarDec ASSIGNOP . Exp

    INT       shift, and go to state 40
    ID        shift, and go to state 41
    FLOAT     shift, and go to state 42
    CHAR      shift, and go to state 43
    DPLUS     shift, and go to state 44
    DMINUS    shift, and go to state 45
    LP        shift, and go to state 46
    LC        shift, and go to state 67
    MINUS     shift, and go to state 48
    NOT       shift, and go to state 49
    BREAK     shift, and go to state 54
    CONTINUE  shift, and go to state 55

    Exp  go to state 95


State 64

   32 Def: Specifier DecList SEMI .

    $default  reduce using rule 32 (Def)


State 65

   34 DecList: Dec COMMA . DecList

    ID  shift, and go to state 26

    VarDec   go to state 37
    DecList  go to state 96
    Dec      go to state 39


State 66

   52 Exp: ID LP . Args RP
   53    | ID LP . RP

    INT       shift, and go to state 40
    ID        shift, and go to state 41
    FLOAT     shift, and go to state 42
    CHAR      shift, and go to state 43
    DPLUS     shift, and go to state 44
    DMINUS    shift, and go to state 45
    LP        shift, and go to state 46
    RP        shift, and go to state 97
    LC        shift, and go to state 67
    MINUS     shift, and go to state 48
    NOT       shift, and go to state 49
    BREAK     shift, and go to state 54
    CONTINUE  shift, and go to state 55

    Exp   go to state 98
    Args  go to state 99


State 67

   60 Exp: LC . ArrayValListN RC

    INT       shift, and go to state 40
    ID        shift, and go to state 41
    FLOAT     shift, and go to state 42
    CHAR      shift, and go to state 43
    DPLUS     shift, and go to state 44
    DMINUS    shift, and go to state 45
    LP        shift, and go to state 46
    LC        shift, and go to state 71
    MINUS     shift, and go to state 48
    NOT       shift, and go to state 49
    BREAK     shift, and go to state 54
    CONTINUE  shift, and go to state 55

    Exp            go to state 72
    ArrayValListN  go to state 73
    ArrayValList1  go to state 74
    ArrayValList   go to state 75


State 68

   37 Exp: Exp . ASSIGNOP Exp
   38    | Exp . AND Exp
   39    | Exp . OR Exp
   40    | Exp . RELOP Exp
   41    | Exp . PLUS Exp
   42    | Exp . MINUS Exp
   43    | Exp . STAR Exp
   44    | Exp . DIV Exp
   48    | DPLUS Exp .
   49    | Exp . DPLUS
   51    | Exp . DMINUS

    DPLUS   shift, and go to state 85
    DMINUS  shift, and go to state 86

    $default  reduce using rule 48 (Exp)


State 69

   37 Exp: Exp . ASSIGNOP Exp
   38    | Exp . AND Exp
   39    | Exp . OR Exp
   40    | Exp . RELOP Exp
   41    | Exp . PLUS Exp
   42    | Exp . MINUS Exp
   43    | Exp . STAR Exp
   44    | Exp . DIV Exp
   49    | Exp . DPLUS
   50    | DMINUS Exp .
   51    | Exp . DMINUS

    DPLUS   shift, and go to state 85
    DMINUS  shift, and go to state 86

    $default  reduce using rule 50 (Exp)


State 70

   37 Exp: Exp . ASSIGNOP Exp
   38    | Exp . AND Exp
   39    | Exp . OR Exp
   40    | Exp . RELOP Exp
   41    | Exp . PLUS Exp
   42    | Exp . MINUS Exp
   43    | Exp . STAR Exp
   44    | Exp . DIV Exp
   45    | LP Exp . RP
   49    | Exp . DPLUS
   51    | Exp . DMINUS

    RELOP     shift, and go to state 84
    DPLUS     shift, and go to state 85
    DMINUS    shift, and go to state 86
    RP        shift, and go to state 100
    PLUS      shift, and go to state 88
    MINUS     shift, and go to state 89
    STAR      shift, and go to state 90
    DIV       shift, and go to state 91
    ASSIGNOP  shift, and go to state 92
    AND       shift, and go to state 93
    OR        shift, and go to state 94


State 71

   60 Exp: LC . ArrayValListN RC
   64 ArrayValList1: LC . ArrayValList RC

    INT       shift, and go to state 40
    ID        shift, and go to state 41
    FLOAT     shift, and go to state 42
    CHAR      shift, and go to state 43
    DPLUS     shift, and go to state 44
    DMINUS    shift, and go to state 45
    LP        shift, and go to state 46
    LC        shift, and go to state 71
    MINUS     shift, and go to state 48
    NOT       shift, and go to state 49
    BREAK     shift, and go to state 54
    CONTINUE  shift, and go to state 55

    Exp            go to state 72
    ArrayValListN  go to state 73
    ArrayValList1  go to state 74
    ArrayValList   go to state 101


State 72

   37 Exp: Exp . ASSIGNOP Exp
   38    | Exp . AND Exp
   39    | Exp . OR Exp
   40    | Exp . RELOP Exp
   41    | Exp . PLUS Exp
   42    | Exp . MINUS Exp
   43    | Exp . STAR Exp
   44    | Exp . DIV Exp
   49    | Exp . DPLUS
   51    | Exp . DMINUS
   66 ArrayValList: Exp .

    RELOP     shift, and go to state 84
    DPLUS     shift, and go to state 85
    DMINUS    shift, and go to state 86
    PLUS      shift, and go to state 88
    MINUS     shift, and go to state 89
    STAR      shift, and go to state 90
    DIV       shift, and go to state 91
    ASSIGNOP  shift, and go to state 92
    AND       shift, and go to state 93
    OR        shift, and go to state 94

    $default  reduce using rule 66 (ArrayValList)


State 73

   60 Exp: LC ArrayValListN . RC
   61 ArrayValListN: ArrayValListN . COMMA ArrayValList1

    RC     shift, and go to state 102
    COMMA  shift, and go to state 103


State 74

   62 ArrayValListN: ArrayValList1 .

    $default  reduce using rule 62 (ArrayValListN)


State 75

   63 ArrayValListN: ArrayValList .
   65 ArrayValList: ArrayValList . COMMA Exp

    COMMA  shift, and go to state 104

    $default  reduce using rule 63 (ArrayValListN)


State 76

   37 Exp: Exp . ASSIGNOP Exp
   38    | Exp . AND Exp
   39    | Exp . OR Exp
   40    | Exp . RELOP Exp
   41    | Exp . PLUS Exp
   42    | Exp . MINUS Exp
   43    | Exp . STAR Exp
   44    | Exp . DIV Exp
   46    | MINUS Exp .
   49    | Exp . DPLUS
   51    | Exp . DMINUS

    DPLUS   shift, and go to state 85
    DMINUS  shift, and go to state 86

    $default  reduce using rule 46 (Exp)


State 77

   37 Exp: Exp . ASSIGNOP Exp
   38    | Exp . AND Exp
   39    | Exp . OR Exp
   40    | Exp . RELOP Exp
   41    | Exp . PLUS Exp
   42    | Exp . MINUS Exp
   43    | Exp . STAR Exp
   44    | Exp . DIV Exp
   47    | NOT Exp .
   49    | Exp . DPLUS
   51    | Exp . DMINUS

    DPLUS   shift, and go to state 85
    DMINUS  shift, and go to state 86

    $default  reduce using rule 47 (Exp)


State 78

   25 Stm: IF LP . Exp RP Stm
   26    | IF LP . Exp RP Stm ELSE Stm

    INT       shift, and go to state 40
    ID        shift, and go to state 41
    FLOAT     shift, and go to state 42
    CHAR      shift, and go to state 43
    DPLUS     shift, and go to state 44
    DMINUS    shift, and go to state 45
    LP        shift, and go to state 46
    LC        shift, and go to state 67
    MINUS     shift, and go to state 48
    NOT       shift, and go to state 49
    BREAK     shift, and go to state 54
    CONTINUE  shift, and go to state 55

    Exp  go to state 105


State 79

   27 Stm: WHILE LP . Exp RP Stm

    INT       shift, and go to state 40
    ID        shift, and go to state 41
    FLOAT     shift, and go to state 42
    CHAR      shift, and go to state 43
    DPLUS     shift, and go to state 44
    DMINUS    shift, and go to state 45
    LP        shift, and go to state 46
    LC        shift, and go to state 67
    MINUS     shift, and go to state 48
    NOT       shift, and go to state 49
    BREAK     shift, and go to state 54
    CONTINUE  shift, and go to state 55

    Exp  go to state 106


State 80

   24 Stm: RETURN Exp . SEMI
   37 Exp: Exp . ASSIGNOP Exp
   38    | Exp . AND Exp
   39    | Exp . OR Exp
   40    | Exp . RELOP Exp
   41    | Exp . PLUS Exp
   42    | Exp . MINUS Exp
   43    | Exp . STAR Exp
   44    | Exp . DIV Exp
   49    | Exp . DPLUS
   51    | Exp . DMINUS

    RELOP     shift, and go to state 84
    DPLUS     shift, and go to state 85
    DMINUS    shift, and go to state 86
    SEMI      shift, and go to state 107
    PLUS      shift, and go to state 88
    MINUS     shift, and go to state 89
    STAR      shift, and go to state 90
    DIV       shift, and go to state 91
    ASSIGNOP  shift, and go to state 92
    AND       shift, and go to state 93
    OR        shift, and go to state 94


State 81

   28 Stm: FOR LP . Def Exp SEMI Exp RP Stm

    TYPE  shift, and go to state 2

    Specifier  go to state 29
    Def        go to state 108


State 82

   19 CompSt: LC DefList StmList RC .

    $default  reduce using rule 19 (CompSt)


State 83

   21 StmList: Stm StmList .

    $default  reduce using rule 21 (StmList)


State 84

   40 Exp: Exp RELOP . Exp

    INT       shift, and go to state 40
    ID        shift, and go to state 41
    FLOAT     shift, and go to state 42
    CHAR      shift, and go to state 43
    DPLUS     shift, and go to state 44
    DMINUS    shift, and go to state 45
    LP        shift, and go to state 46
    LC        shift, and go to state 67
    MINUS     shift, and go to state 48
    NOT       shift, and go to state 49
    BREAK     shift, and go to state 54
    CONTINUE  shift, and go to state 55

    Exp  go to state 109


State 85

   49 Exp: Exp DPLUS .

    $default  reduce using rule 49 (Exp)


State 86

   51 Exp: Exp DMINUS .

    $default  reduce using rule 51 (Exp)


State 87

   22 Stm: Exp SEMI .

    $default  reduce using rule 22 (Stm)


State 88

   41 Exp: Exp PLUS . Exp

    INT       shift, and go to state 40
    ID        shift, and go to state 41
    FLOAT     shift, and go to state 42
    CHAR      shift, and go to state 43
    DPLUS     shift, and go to state 44
    DMINUS    shift, and go to state 45
    LP        shift, and go to state 46
    LC        shift, and go to state 67
    MINUS     shift, and go to state 48
    NOT       shift, and go to state 49
    BREAK     shift, and go to state 54
    CONTINUE  shift, and go to state 55

    Exp  go to state 110


State 89

   42 Exp: Exp MINUS . Exp

    INT       shift, and go to state 40
    ID        shift, and go to state 41
    FLOAT     shift, and go to state 42
    CHAR      shift, and go to state 43
    DPLUS     shift, and go to state 44
    DMINUS    shift, and go to state 45
    LP        shift, and go to state 46
    LC        shift, and go to state 67
    MINUS     shift, and go to state 48
    NOT       shift, and go to state 49
    BREAK     shift, and go to state 54
    CONTINUE  shift, and go to state 55

    Exp  go to state 111


State 90

   43 Exp: Exp STAR . Exp

    INT       shift, and go to state 40
    ID        shift, and go to state 41
    FLOAT     shift, and go to state 42
    CHAR      shift, and go to state 43
    DPLUS     shift, and go to state 44
    DMINUS    shift, and go to state 45
    LP        shift, and go to state 46
    LC        shift, and go to state 67
    MINUS     shift, and go to state 48
    NOT       shift, and go to state 49
    BREAK     shift, and go to state 54
    CONTINUE  shift, and go to state 55

    Exp  go to state 112


State 91

   44 Exp: Exp DIV . Exp

    INT       shift, and go to state 40
    ID        shift, and go to state 41
    FLOAT     shift, and go to state 42
    CHAR      shift, and go to state 43
    DPLUS     shift, and go to state 44
    DMINUS    shift, and go to state 45
    LP        shift, and go to state 46
    LC        shift, and go to state 67
    MINUS     shift, and go to state 48
    NOT       shift, and go to state 49
    BREAK     shift, and go to state 54
    CONTINUE  shift, and go to state 55

    Exp  go to state 113


State 92

   37 Exp: Exp ASSIGNOP . Exp

    INT       shift, and go to state 40
    ID        shift, and go to state 41
    FLOAT     shift, and go to state 42
    CHAR      shift, and go to state 43
    DPLUS     shift, and go to state 44
    DMINUS    shift, and go to state 45
    LP        shift, and go to state 46
    LC        shift, and go to state 67
    MINUS     shift, and go to state 48
    NOT       shift, and go to state 49
    BREAK     shift, and go to state 54
    CONTINUE  shift, and go to state 55

    Exp  go to state 114


State 93

   38 Exp: Exp AND . Exp

    INT       shift, and go to state 40
    ID        shift, and go to state 41
    FLOAT     shift, and go to state 42
    CHAR      shift, and go to state 43
    DPLUS     shift, and go to state 44
    DMINUS    shift, and go to state 45
    LP        shift, and go to state 46
    LC        shift, and go to state 67
    MINUS     shift, and go to state 48
    NOT       shift, and go to state 49
    BREAK     shift, and go to state 54
    CONTINUE  shift, and go to state 55

    Exp  go to state 115


State 94

   39 Exp: Exp OR . Exp

    INT       shift, and go to state 40
    ID        shift, and go to state 41
    FLOAT     shift, and go to state 42
    CHAR      shift, and go to state 43
    DPLUS     shift, and go to state 44
    DMINUS    shift, and go to state 45
    LP        shift, and go to state 46
    LC        shift, and go to state 67
    MINUS     shift, and go to state 48
    NOT       shift, and go to state 49
    BREAK     shift, and go to state 54
    CONTINUE  shift, and go to state 55

    Exp  go to state 116


State 95

   36 Dec: VarDec ASSIGNOP Exp .
   37 Exp: Exp . ASSIGNOP Exp
   38    | Exp . AND Exp
   39    | Exp . OR Exp
   40    | Exp . RELOP Exp
   41    | Exp . PLUS Exp
   42    | Exp . MINUS Exp
   43    | Exp . STAR Exp
   44    | Exp . DIV Exp
   49    | Exp . DPLUS
   51    | Exp . DMINUS

    RELOP     shift, and go to state 84
    DPLUS     shift, and go to state 85
    DMINUS    shift, and go to state 86
    PLUS      shift, and go to state 88
    MINUS     shift, and go to state 89
    STAR      shift, and go to state 90
    DIV       shift, and go to state 91
    ASSIGNOP  shift, and go to state 92
    AND       shift, and go to state 93
    OR        shift, and go to state 94

    $default  reduce using rule 36 (Dec)


State 96

   34 DecList: Dec COMMA DecList .

    $default  reduce using rule 34 (DecList)


State 97

   53 Exp: ID LP RP .

    $default  reduce using rule 53 (Exp)


State 98

   37 Exp: Exp . ASSIGNOP Exp
   38    | Exp . AND Exp
   39    | Exp . OR Exp
   40    | Exp . RELOP Exp
   41    | Exp . PLUS Exp
   42    | Exp . MINUS Exp
   43    | Exp . STAR Exp
   44    | Exp . DIV Exp
   49    | Exp . DPLUS
   51    | Exp . DMINUS
   67 Args: Exp . COMMA Args
   68     | Exp .

    RELOP     shift, and go to state 84
    DPLUS     shift, and go to state 85
    DMINUS    shift, and go to state 86
    COMMA     shift, and go to state 117
    PLUS      shift, and go to state 88
    MINUS     shift, and go to state 89
    STAR      shift, and go to state 90
    DIV       shift, and go to state 91
    ASSIGNOP  shift, and go to state 92
    AND       shift, and go to state 93
    OR        shift, and go to state 94

    $default  reduce using rule 68 (Args)


State 99

   52 Exp: ID LP Args . RP

    RP  shift, and go to state 118


State 100

   45 Exp: LP Exp RP .

    $default  reduce using rule 45 (Exp)


State 101

   63 ArrayValListN: ArrayValList .
   64 ArrayValList1: LC ArrayValList . RC
   65 ArrayValList: ArrayValList . COMMA Exp

    RC     shift, and go to state 119
    COMMA  shift, and go to state 104


State 102

   60 Exp: LC ArrayValListN RC .

    $default  reduce using rule 60 (Exp)


State 103

   61 ArrayValListN: ArrayValListN COMMA . ArrayValList1

    LC  shift, and go to state 120

    ArrayValList1  go to state 121


State 104

   65 ArrayValList: ArrayValList COMMA . Exp

    INT       shift, and go to state 40
    ID        shift, and go to state 41
    FLOAT     shift, and go to state 42
    CHAR      shift, and go to state 43
    DPLUS     shift, and go to state 44
    DMINUS    shift, and go to state 45
    LP        shift, and go to state 46
    LC        shift, and go to state 67
    MINUS     shift, and go to state 48
    NOT       shift, and go to state 49
    BREAK     shift, and go to state 54
    CONTINUE  shift, and go to state 55

    Exp  go to state 122


State 105

   25 Stm: IF LP Exp . RP Stm
   26    | IF LP Exp . RP Stm ELSE Stm
   37 Exp: Exp . ASSIGNOP Exp
   38    | Exp . AND Exp
   39    | Exp . OR Exp
   40    | Exp . RELOP Exp
   41    | Exp . PLUS Exp
   42    | Exp . MINUS Exp
   43    | Exp . STAR Exp
   44    | Exp . DIV Exp
   49    | Exp . DPLUS
   51    | Exp . DMINUS

    RELOP     shift, and go to state 84
    DPLUS     shift, and go to state 85
    DMINUS    shift, and go to state 86
    RP        shift, and go to state 123
    PLUS      shift, and go to state 88
    MINUS     shift, and go to state 89
    STAR      shift, and go to state 90
    DIV       shift, and go to state 91
    ASSIGNOP  shift, and go to state 92
    AND       shift, and go to state 93
    OR        shift, and go to state 94


State 106

   27 Stm: WHILE LP Exp . RP Stm
   37 Exp: Exp . ASSIGNOP Exp
   38    | Exp . AND Exp
   39    | Exp . OR Exp
   40    | Exp . RELOP Exp
   41    | Exp . PLUS Exp
   42    | Exp . MINUS Exp
   43    | Exp . STAR Exp
   44    | Exp . DIV Exp
   49    | Exp . DPLUS
   51    | Exp . DMINUS

    RELOP     shift, and go to state 84
    DPLUS     shift, and go to state 85
    DMINUS    shift, and go to state 86
    RP        shift, and go to state 124
    PLUS      shift, and go to state 88
    MINUS     shift, and go to state 89
    STAR      shift, and go to state 90
    DIV       shift, and go to state 91
    ASSIGNOP  shift, and go to state 92
    AND       shift, and go to state 93
    OR        shift, and go to state 94


State 107

   24 Stm: RETURN Exp SEMI .

    $default  reduce using rule 24 (Stm)


State 108

   28 Stm: FOR LP Def . Exp SEMI Exp RP Stm

    INT       shift, and go to state 40
    ID        shift, and go to state 41
    FLOAT     shift, and go to state 42
    CHAR      shift, and go to state 43
    DPLUS     shift, and go to state 44
    DMINUS    shift, and go to state 45
    LP        shift, and go to state 46
    LC        shift, and go to state 67
    MINUS     shift, and go to state 48
    NOT       shift, and go to state 49
    BREAK     shift, and go to state 54
    CONTINUE  shift, and go to state 55

    Exp  go to state 125


State 109

   37 Exp: Exp . ASSIGNOP Exp
   38    | Exp . AND Exp
   39    | Exp . OR Exp
   40    | Exp . RELOP Exp
   40    | Exp RELOP Exp .
   41    | Exp . PLUS Exp
   42    | Exp . MINUS Exp
   43    | Exp . STAR Exp
   44    | Exp . DIV Exp
   49    | Exp . DPLUS
   51    | Exp . DMINUS

    DPLUS   shift, and go to state 85
    DMINUS  shift, and go to state 86
    PLUS    shift, and go to state 88
    MINUS   shift, and go to state 89
    STAR    shift, and go to state 90
    DIV     shift, and go to state 91

    $default  reduce using rule 40 (Exp)


State 110

   37 Exp: Exp . ASSIGNOP Exp
   38    | Exp . AND Exp
   39    | Exp . OR Exp
   40    | Exp . RELOP Exp
   41    | Exp . PLUS Exp
   41    | Exp PLUS Exp .
   42    | Exp . MINUS Exp
   43    | Exp . STAR Exp
   44    | Exp . DIV Exp
   49    | Exp . DPLUS
   51    | Exp . DMINUS

    DPLUS   shift, and go to state 85
    DMINUS  shift, and go to state 86
    STAR    shift, and go to state 90
    DIV     shift, and go to state 91

    $default  reduce using rule 41 (Exp)


State 111

   37 Exp: Exp . ASSIGNOP Exp
   38    | Exp . AND Exp
   39    | Exp . OR Exp
   40    | Exp . RELOP Exp
   41    | Exp . PLUS Exp
   42    | Exp . MINUS Exp
   42    | Exp MINUS Exp .
   43    | Exp . STAR Exp
   44    | Exp . DIV Exp
   49    | Exp . DPLUS
   51    | Exp . DMINUS

    DPLUS   shift, and go to state 85
    DMINUS  shift, and go to state 86
    STAR    shift, and go to state 90
    DIV     shift, and go to state 91

    $default  reduce using rule 42 (Exp)


State 112

   37 Exp: Exp . ASSIGNOP Exp
   38    | Exp . AND Exp
   39    | Exp . OR Exp
   40    | Exp . RELOP Exp
   41    | Exp . PLUS Exp
   42    | Exp . MINUS Exp
   43    | Exp . STAR Exp
   43    | Exp STAR Exp .
   44    | Exp . DIV Exp
   49    | Exp . DPLUS
   51    | Exp . DMINUS

    DPLUS   shift, and go to state 85
    DMINUS  shift, and go to state 86

    $default  reduce using rule 43 (Exp)


State 113

   37 Exp: Exp . ASSIGNOP Exp
   38    | Exp . AND Exp
   39    | Exp . OR Exp
   40    | Exp . RELOP Exp
   41    | Exp . PLUS Exp
   42    | Exp . MINUS Exp
   43    | Exp . STAR Exp
   44    | Exp . DIV Exp
   44    | Exp DIV Exp .
   49    | Exp . DPLUS
   51    | Exp . DMINUS

    DPLUS   shift, and go to state 85
    DMINUS  shift, and go to state 86

    $default  reduce using rule 44 (Exp)


State 114

   37 Exp: Exp . ASSIGNOP Exp
   37    | Exp ASSIGNOP Exp .
   38    | Exp . AND Exp
   39    | Exp . OR Exp
   40    | Exp . RELOP Exp
   41    | Exp . PLUS Exp
   42    | Exp . MINUS Exp
   43    | Exp . STAR Exp
   44    | Exp . DIV Exp
   49    | Exp . DPLUS
   51    | Exp . DMINUS

    RELOP   shift, and go to state 84
    DPLUS   shift, and go to state 85
    DMINUS  shift, and go to state 86
    PLUS    shift, and go to state 88
    MINUS   shift, and go to state 89
    STAR    shift, and go to state 90
    DIV     shift, and go to state 91
    AND     shift, and go to state 93
    OR      shift, and go to state 94

    $default  reduce using rule 37 (Exp)


State 115

   37 Exp: Exp . ASSIGNOP Exp
   38    | Exp . AND Exp
   38    | Exp AND Exp .
   39    | Exp . OR Exp
   40    | Exp . RELOP Exp
   41    | Exp . PLUS Exp
   42    | Exp . MINUS Exp
   43    | Exp . STAR Exp
   44    | Exp . DIV Exp
   49    | Exp . DPLUS
   51    | Exp . DMINUS

    RELOP   shift, and go to state 84
    DPLUS   shift, and go to state 85
    DMINUS  shift, and go to state 86
    PLUS    shift, and go to state 88
    MINUS   shift, and go to state 89
    STAR    shift, and go to state 90
    DIV     shift, and go to state 91

    $default  reduce using rule 38 (Exp)


State 116

   37 Exp: Exp . ASSIGNOP Exp
   38    | Exp . AND Exp
   39    | Exp . OR Exp
   39    | Exp OR Exp .
   40    | Exp . RELOP Exp
   41    | Exp . PLUS Exp
   42    | Exp . MINUS Exp
   43    | Exp . STAR Exp
   44    | Exp . DIV Exp
   49    | Exp . DPLUS
   51    | Exp . DMINUS

    RELOP   shift, and go to state 84
    DPLUS   shift, and go to state 85
    DMINUS  shift, and go to state 86
    PLUS    shift, and go to state 88
    MINUS   shift, and go to state 89
    STAR    shift, and go to state 90
    DIV     shift, and go to state 91
    AND     shift, and go to state 93

    $default  reduce using rule 39 (Exp)


State 117

   67 Args: Exp COMMA . Args

    INT       shift, and go to state 40
    ID        shift, and go to state 41
    FLOAT     shift, and go to state 42
    CHAR      shift, and go to state 43
    DPLUS     shift, and go to state 44
    DMINUS    shift, and go to state 45
    LP        shift, and go to state 46
    LC        shift, and go to state 67
    MINUS     shift, and go to state 48
    NOT       shift, and go to state 49
    BREAK     shift, and go to state 54
    CONTINUE  shift, and go to state 55

    Exp   go to state 98
    Args  go to state 126


State 118

   52 Exp: ID LP Args RP .

    $default  reduce using rule 52 (Exp)


State 119

   64 ArrayValList1: LC ArrayValList RC .

    $default  reduce using rule 64 (ArrayValList1)


State 120

   64 ArrayValList1: LC . ArrayValList RC

    INT       shift, and go to state 40
    ID        shift, and go to state 41
    FLOAT     shift, and go to state 42
    CHAR      shift, and go to state 43
    DPLUS     shift, and go to state 44
    DMINUS    shift, and go to state 45
    LP        shift, and go to state 46
    LC        shift, and go to state 67
    MINUS     shift, and go to state 48
    NOT       shift, and go to state 49
    BREAK     shift, and go to state 54
    CONTINUE  shift, and go to state 55

    Exp           go to state 72
    ArrayValList  go to state 127


State 121

   61 ArrayValListN: ArrayValListN COMMA ArrayValList1 .

    $default  reduce using rule 61 (ArrayValListN)


State 122

   37 Exp: Exp . ASSIGNOP Exp
   38    | Exp . AND Exp
   39    | Exp . OR Exp
   40    | Exp . RELOP Exp
   41    | Exp . PLUS Exp
   42    | Exp . MINUS Exp
   43    | Exp . STAR Exp
   44    | Exp . DIV Exp
   49    | Exp . DPLUS
   51    | Exp . DMINUS
   65 ArrayValList: ArrayValList COMMA Exp .

    RELOP     shift, and go to state 84
    DPLUS     shift, and go to state 85
    DMINUS    shift, and go to state 86
    PLUS      shift, and go to state 88
    MINUS     shift, and go to state 89
    STAR      shift, and go to state 90
    DIV       shift, and go to state 91
    ASSIGNOP  shift, and go to state 92
    AND       shift, and go to state 93
    OR        shift, and go to state 94

    $default  reduce using rule 65 (ArrayValList)


State 123

   25 Stm: IF LP Exp RP . Stm
   26    | IF LP Exp RP . Stm ELSE Stm

    INT       shift, and go to state 40
    ID        shift, and go to state 41
    FLOAT     shift, and go to state 42
    CHAR      shift, and go to state 43
    DPLUS     shift, and go to state 44
    DMINUS    shift, and go to state 45
    LP        shift, and go to state 46
    LC        shift, and go to state 47
    MINUS     shift, and go to state 48
    NOT       shift, and go to state 49
    IF        shift, and go to state 50
    WHILE     shift, and go to state 51
    RETURN    shift, and go to state 52
    FOR       shift, and go to state 53
    BREAK     shift, and go to state 54
    CONTINUE  shift, and go to state 55

    CompSt  go to state 56
    Stm     go to state 128
    Exp     go to state 59


State 124

   27 Stm: WHILE LP Exp RP . Stm

    INT       shift, and go to state 40
    ID        shift, and go to state 41
    FLOAT     shift, and go to state 42
    CHAR      shift, and go to state 43
    DPLUS     shift, and go to state 44
    DMINUS    shift, and go to state 45
    LP        shift, and go to state 46
    LC        shift, and go to state 47
    MINUS     shift, and go to state 48
    NOT       shift, and go to state 49
    IF        shift, and go to state 50
    WHILE     shift, and go to state 51
    RETURN    shift, and go to state 52
    FOR       shift, and go to state 53
    BREAK     shift, and go to state 54
    CONTINUE  shift, and go to state 55

    CompSt  go to state 56
    Stm     go to state 129
    Exp     go to state 59


State 125

   28 Stm: FOR LP Def Exp . SEMI Exp RP Stm
   37 Exp: Exp . ASSIGNOP Exp
   38    | Exp . AND Exp
   39    | Exp . OR Exp
   40    | Exp . RELOP Exp
   41    | Exp . PLUS Exp
   42    | Exp . MINUS Exp
   43    | Exp . STAR Exp
   44    | Exp . DIV Exp
   49    | Exp . DPLUS
   51    | Exp . DMINUS

    RELOP     shift, and go to state 84
    DPLUS     shift, and go to state 85
    DMINUS    shift, and go to state 86
    SEMI      shift, and go to state 130
    PLUS      shift, and go to state 88
    MINUS     shift, and go to state 89
    STAR      shift, and go to state 90
    DIV       shift, and go to state 91
    ASSIGNOP  shift, and go to state 92
    AND       shift, and go to state 93
    OR        shift, and go to state 94


State 126

   67 Args: Exp COMMA Args .

    $default  reduce using rule 67 (Args)


State 127

   64 ArrayValList1: LC ArrayValList . RC
   65 ArrayValList: ArrayValList . COMMA Exp

    RC     shift, and go to state 119
    COMMA  shift, and go to state 104


State 128

   25 Stm: IF LP Exp RP Stm .
   26    | IF LP Exp RP Stm . ELSE Stm

    ELSE  shift, and go to state 131

    $default  reduce using rule 25 (Stm)


State 129

   27 Stm: WHILE LP Exp RP Stm .

    $default  reduce using rule 27 (Stm)


State 130

   28 Stm: FOR LP Def Exp SEMI . Exp RP Stm

    INT       shift, and go to state 40
    ID        shift, and go to state 41
    FLOAT     shift, and go to state 42
    CHAR      shift, and go to state 43
    DPLUS     shift, and go to state 44
    DMINUS    shift, and go to state 45
    LP        shift, and go to state 46
    LC        shift, and go to state 67
    MINUS     shift, and go to state 48
    NOT       shift, and go to state 49
    BREAK     shift, and go to state 54
    CONTINUE  shift, and go to state 55

    Exp  go to state 132


State 131

   26 Stm: IF LP Exp RP Stm ELSE . Stm

    INT       shift, and go to state 40
    ID        shift, and go to state 41
    FLOAT     shift, and go to state 42
    CHAR      shift, and go to state 43
    DPLUS     shift, and go to state 44
    DMINUS    shift, and go to state 45
    LP        shift, and go to state 46
    LC        shift, and go to state 47
    MINUS     shift, and go to state 48
    NOT       shift, and go to state 49
    IF        shift, and go to state 50
    WHILE     shift, and go to state 51
    RETURN    shift, and go to state 52
    FOR       shift, and go to state 53
    BREAK     shift, and go to state 54
    CONTINUE  shift, and go to state 55

    CompSt  go to state 56
    Stm     go to state 133
    Exp     go to state 59


State 132

   28 Stm: FOR LP Def Exp SEMI Exp . RP Stm
   37 Exp: Exp . ASSIGNOP Exp
   38    | Exp . AND Exp
   39    | Exp . OR Exp
   40    | Exp . RELOP Exp
   41    | Exp . PLUS Exp
   42    | Exp . MINUS Exp
   43    | Exp . STAR Exp
   44    | Exp . DIV Exp
   49    | Exp . DPLUS
   51    | Exp . DMINUS

    RELOP     shift, and go to state 84
    DPLUS     shift, and go to state 85
    DMINUS    shift, and go to state 86
    RP        shift, and go to state 134
    PLUS      shift, and go to state 88
    MINUS     shift, and go to state 89
    STAR      shift, and go to state 90
    DIV       shift, and go to state 91
    ASSIGNOP  shift, and go to state 92
    AND       shift, and go to state 93
    OR        shift, and go to state 94


State 133

   26 Stm: IF LP Exp RP Stm ELSE Stm .

    $default  reduce using rule 26 (Stm)


State 134

   28 Stm: FOR LP Def Exp SEMI Exp RP . Stm

    INT       shift, and go to state 40
    ID        shift, and go to state 41
    FLOAT     shift, and go to state 42
    CHAR      shift, and go to state 43
    DPLUS     shift, and go to state 44
    DMINUS    shift, and go to state 45
    LP        shift, and go to state 46
    LC        shift, and go to state 47
    MINUS     shift, and go to state 48
    NOT       shift, and go to state 49
    IF        shift, and go to state 50
    WHILE     shift, and go to state 51
    RETURN    shift, and go to state 52
    FOR       shift, and go to state 53
    BREAK     shift, and go to state 54
    CONTINUE  shift, and go to state 55

    CompSt  go to state 56
    Stm     go to state 135
    Exp     go to state 59


State 135

   28 Stm: FOR LP Def Exp SEMI Exp RP Stm .

    $default  reduce using rule 28 (Stm)
